Terminals unused in grammar

   AUTO
   CASE
   CHAR
   DEFAULT
   DOUBLE
   ENUM
   EXTERN
   FLOAT
   GOTO
   INT
   LONG
   REGISTER
   SHORT
   SIGNED
   SIZEOF
   STATIC
   STRUCT
   SWITCH
   TYPEDEF
   UNION
   UNSIGNED
   VOID
   VOLATILE
   QUESTION_MARK
   AMPERSAND
   APOSTROPHE
   LINE_COMMENT
   BLOCK_COMMENT


Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmts stmt
    3      | %empty

    4 M: %empty

    5 stmt: expr SEMICOLON
    6     | ifstmt
    7     | whilestmt
    8     | dostmt
    9     | forstmt
   10     | returnstmt
   11     | BREAK SEMICOLON
   12     | CONTINUE SEMICOLON
   13     | block
   14     | funcdef
   15     | SEMICOLON
   16     | Debugger

   17 expr: assignexpr
   18     | expr PLUS expr
   19     | expr MINUS expr
   20     | expr MULTIPLY expr
   21     | expr DIVIDE expr
   22     | expr MODERATE expr
   23     | expr GREATER_THAN expr
   24     | expr GREATER_EQUAL expr
   25     | expr LESS_THAN expr
   26     | expr LESS_EQUAL expr
   27     | expr EQUAL expr
   28     | expr NOT_EQUAL expr
   29     | expr AND M expr
   30     | expr OR M expr
   31     | term

   32 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   33     | MINUS expr
   34     | NOT expr
   35     | PLUS_PLUS lvalue

   36 $@1: %empty

   37 term: lvalue $@1 PLUS_PLUS
   38     | MINUS_MINUS lvalue

   39 $@2: %empty

   40 term: lvalue $@2 MINUS_MINUS
   41     | primary

   42 assignexpr: lvalue ASSIGNATION expr

   43 primary: lvalue
   44        | call
   45        | objectdef
   46        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   47        | const

   48 Debugger: DEBUG

   49 lvalue: IDENTIFIER
   50       | LOCAL IDENTIFIER
   51       | DOUBLE_COLON IDENTIFIER
   52       | member

   53 member: lvalue DOT IDENTIFIER
   54       | lvalue LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   55       | call DOT IDENTIFIER
   56       | call LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET

   57 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   58     | lvalue callsuffix
   59     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   60 callsuffix: normcall
   61           | methodcall

   62 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   63 methodcall: DOUBLE_DOT IDENTIFIER LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   64 elist: expr
   65      | elist COMMA expr
   66      | %empty

   67 objectdef: LEFT_SQUARE_BRACKET elist RIGHT_SQUARE_BRACKET
   68          | LEFT_SQUARE_BRACKET indexed RIGHT_SQUARE_BRACKET

   69 indexed: indexedelem
   70        | indexed COMMA indexedelem

   71 indexedelem: LEFT_BRACKET expr COLON expr RIGHT_BRACKET

   72 $@3: %empty

   73 block: LEFT_BRACKET $@3 RIGHT_BRACKET

   74 $@4: %empty

   75 block: LEFT_BRACKET $@4 stmt stmts RIGHT_BRACKET

   76 $@5: %empty

   77 $@6: %empty

   78 funcdef: FUNCTION LEFT_PARENTHESIS $@5 idlist RIGHT_PARENTHESIS $@6 block

   79 $@7: %empty

   80 $@8: %empty

   81 $@9: %empty

   82 funcdef: FUNCTION IDENTIFIER $@7 LEFT_PARENTHESIS $@8 idlist RIGHT_PARENTHESIS $@9 block

   83 const: CONST_INT
   84      | CONST_FLOAT
   85      | STRING
   86      | NIL
   87      | TRUE
   88      | FALSE

   89 idlist: IDENTIFIER
   90       | idlist COMMA IDENTIFIER
   91       | %empty

   92 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt
   93       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt

   94 $@10: %empty

   95 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS $@10 stmt

   96 dostmt: DO LEFT_BRACKET stmt RIGHT_BRACKET WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

   97 $@11: %empty

   98 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS $@11 stmt

   99 returnstmt: RETURN SEMICOLON M
  100           | RETURN expr SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 49 50 51 53 55 63 82 89 90
CONST_INT (259) 83
CONST_FLOAT (260) 84
STRING (261) 85
AUTO (262)
CASE (263)
CHAR (264)
DEFAULT (265)
DO (266) 96
DOUBLE (267)
ENUM (268)
EXTERN (269)
FLOAT (270)
GOTO (271)
INT (272)
LONG (273)
REGISTER (274)
SHORT (275)
SIGNED (276)
SIZEOF (277)
STATIC (278)
STRUCT (279)
SWITCH (280)
TYPEDEF (281)
UNION (282)
UNSIGNED (283)
VOID (284)
VOLATILE (285)
IF (286) 92 93
ELSE (287) 93
WHILE (288) 95 96
FOR (289) 98
FUNCTION (290) 78 82
RETURN (291) 99 100
BREAK (292) 11
CONTINUE (293) 12
AND (294) 29
NOT (295) 34
OR (296) 30
LOCAL (297) 50
TRUE (298) 87
FALSE (299) 88
NIL (300) 86
EQUAL (301) 27
PLUS (302) 18
MINUS (303) 19 33
MULTIPLY (304) 20
DIVIDE (305) 21
MODERATE (306) 22
ASSIGNATION (307) 42
NOT_EQUAL (308) 28
PLUS_PLUS (309) 35 37
MINUS_MINUS (310) 38 40
GREATER_THAN (311) 23
LESS_THAN (312) 25
GREATER_EQUAL (313) 24
LESS_EQUAL (314) 26
QUESTION_MARK (315)
AMPERSAND (316)
UMINUS (317)
LEFT_BRACKET (318) 71 73 75 96
RIGHT_BRACKET (319) 71 73 75 96
LEFT_SQUARE_BRACKET (320) 54 56 67 68
RIGHT_SQUARE_BRACKET (321) 54 56 67 68
LEFT_PARENTHESIS (322) 32 46 57 59 62 63 78 82 92 93 95 96 98
RIGHT_PARENTHESIS (323) 32 46 57 59 62 63 78 82 92 93 95 96 98
SEMICOLON (324) 5 11 12 15 98 99 100
COMMA (325) 65 70 90
COLON (326) 71
DOUBLE_COLON (327) 51
DOT (328) 53 55
DOUBLE_DOT (329) 63
APOSTROPHE (330)
DEBUG (331) 48
LINE_COMMENT (332)
BLOCK_COMMENT (333)
BASIC_IF (334)


Nonterminals, with rules where they appear

$accept (80)
    on left: 0
program (81)
    on left: 1, on right: 0
stmts (82)
    on left: 2 3, on right: 1 2 75
M (83)
    on left: 4, on right: 29 30 99
stmt (84)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16, on right: 2 75 92 93 95
    96 98
expr (85)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31, on right:
    5 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 42 54 56 64 65
    71 92 93 95 96 98 100
term (86)
    on left: 32 33 34 35 37 38 40 41, on right: 31
$@1 (87)
    on left: 36, on right: 37
$@2 (88)
    on left: 39, on right: 40
assignexpr (89)
    on left: 42, on right: 17
primary (90)
    on left: 43 44 45 46 47, on right: 41
Debugger (91)
    on left: 48, on right: 16
lvalue (92)
    on left: 49 50 51 52, on right: 35 37 38 40 42 43 53 54 58
member (93)
    on left: 53 54 55 56, on right: 52
call (94)
    on left: 57 58 59, on right: 44 55 56 57
callsuffix (95)
    on left: 60 61, on right: 58
normcall (96)
    on left: 62, on right: 60
methodcall (97)
    on left: 63, on right: 61
elist (98)
    on left: 64 65 66, on right: 57 59 62 63 65 67 98
objectdef (99)
    on left: 67 68, on right: 45
indexed (100)
    on left: 69 70, on right: 68 70
indexedelem (101)
    on left: 71, on right: 69 70
block (102)
    on left: 73 75, on right: 13 78 82
$@3 (103)
    on left: 72, on right: 73
$@4 (104)
    on left: 74, on right: 75
funcdef (105)
    on left: 78 82, on right: 14 46 59
$@5 (106)
    on left: 76, on right: 78
$@6 (107)
    on left: 77, on right: 78
$@7 (108)
    on left: 79, on right: 82
$@8 (109)
    on left: 80, on right: 82
$@9 (110)
    on left: 81, on right: 82
const (111)
    on left: 83 84 85 86 87 88, on right: 47
idlist (112)
    on left: 89 90 91, on right: 78 82 90
ifstmt (113)
    on left: 92 93, on right: 6
whilestmt (114)
    on left: 95, on right: 7
$@10 (115)
    on left: 94, on right: 95
dostmt (116)
    on left: 96, on right: 8
forstmt (117)
    on left: 98, on right: 9
$@11 (118)
    on left: 97, on right: 98
returnstmt (119)
    on left: 99 100, on right: 10


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (stmts)

    program  go to state 1
    stmts    go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: stmts .
    2 stmts: stmts . stmt

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    DO                   shift, and go to state 8
    IF                   shift, and go to state 9
    WHILE                shift, and go to state 10
    FOR                  shift, and go to state 11
    FUNCTION             shift, and go to state 12
    RETURN               shift, and go to state 13
    BREAK                shift, and go to state 14
    CONTINUE             shift, and go to state 15
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_BRACKET         shift, and go to state 24
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    SEMICOLON            shift, and go to state 27
    DOUBLE_COLON         shift, and go to state 28
    DEBUG                shift, and go to state 29

    $default  reduce using rule 1 (program)

    stmt        go to state 30
    expr        go to state 31
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    Debugger    go to state 35
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    block       go to state 40
    funcdef     go to state 41
    const       go to state 42
    ifstmt      go to state 43
    whilestmt   go to state 44
    dostmt      go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 3

    0 $accept: program $end .

    $default  accept


State 4

   49 lvalue: IDENTIFIER .

    $default  reduce using rule 49 (lvalue)


State 5

   83 const: CONST_INT .

    $default  reduce using rule 83 (const)


State 6

   84 const: CONST_FLOAT .

    $default  reduce using rule 84 (const)


State 7

   85 const: STRING .

    $default  reduce using rule 85 (const)


State 8

   96 dostmt: DO . LEFT_BRACKET stmt RIGHT_BRACKET WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

    LEFT_BRACKET  shift, and go to state 48


State 9

   92 ifstmt: IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt
   93       | IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt

    LEFT_PARENTHESIS  shift, and go to state 49


State 10

   95 whilestmt: WHILE . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS $@10 stmt

    LEFT_PARENTHESIS  shift, and go to state 50


State 11

   98 forstmt: FOR . LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS $@11 stmt

    LEFT_PARENTHESIS  shift, and go to state 51


State 12

   78 funcdef: FUNCTION . LEFT_PARENTHESIS $@5 idlist RIGHT_PARENTHESIS $@6 block
   82        | FUNCTION . IDENTIFIER $@7 LEFT_PARENTHESIS $@8 idlist RIGHT_PARENTHESIS $@9 block

    IDENTIFIER        shift, and go to state 52
    LEFT_PARENTHESIS  shift, and go to state 53


State 13

   99 returnstmt: RETURN . SEMICOLON M
  100           | RETURN . expr SEMICOLON

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    SEMICOLON            shift, and go to state 54
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 55
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 14

   11 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 56


State 15

   12 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 57


State 16

   34 term: NOT . expr

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 58
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 17

   50 lvalue: LOCAL . IDENTIFIER

    IDENTIFIER  shift, and go to state 59


State 18

   87 const: TRUE .

    $default  reduce using rule 87 (const)


State 19

   88 const: FALSE .

    $default  reduce using rule 88 (const)


State 20

   86 const: NIL .

    $default  reduce using rule 86 (const)


State 21

   33 term: MINUS . expr

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 60
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 22

   35 term: PLUS_PLUS . lvalue

    IDENTIFIER        shift, and go to state 4
    LOCAL             shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 61
    DOUBLE_COLON      shift, and go to state 28

    lvalue  go to state 62
    member  go to state 37
    call    go to state 63


State 23

   38 term: MINUS_MINUS . lvalue

    IDENTIFIER        shift, and go to state 4
    LOCAL             shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 61
    DOUBLE_COLON      shift, and go to state 28

    lvalue  go to state 64
    member  go to state 37
    call    go to state 63


State 24

   73 block: LEFT_BRACKET . $@3 RIGHT_BRACKET
   75      | LEFT_BRACKET . $@4 stmt stmts RIGHT_BRACKET

    RIGHT_BRACKET  reduce using rule 72 ($@3)
    $default       reduce using rule 74 ($@4)

    $@3  go to state 65
    $@4  go to state 66


State 25

   67 objectdef: LEFT_SQUARE_BRACKET . elist RIGHT_SQUARE_BRACKET
   68          | LEFT_SQUARE_BRACKET . indexed RIGHT_SQUARE_BRACKET

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_BRACKET         shift, and go to state 67
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    $default  reduce using rule 66 (elist)

    expr         go to state 68
    term         go to state 32
    assignexpr   go to state 33
    primary      go to state 34
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    elist        go to state 69
    objectdef    go to state 39
    indexed      go to state 70
    indexedelem  go to state 71
    const        go to state 42


State 26

   32 term: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS
   46 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   59 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    FUNCTION             shift, and go to state 12
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 72
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    funcdef     go to state 73
    const       go to state 42


State 27

   15 stmt: SEMICOLON .

    $default  reduce using rule 15 (stmt)


State 28

   51 lvalue: DOUBLE_COLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 74


State 29

   48 Debugger: DEBUG .

    $default  reduce using rule 48 (Debugger)


State 30

    2 stmts: stmts stmt .

    $default  reduce using rule 2 (stmts)


State 31

    5 stmt: expr . SEMICOLON
   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    EQUAL          shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODERATE       shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_THAN      shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    SEMICOLON      shift, and go to state 88


State 32

   31 expr: term .

    $default  reduce using rule 31 (expr)


State 33

   17 expr: assignexpr .

    $default  reduce using rule 17 (expr)


State 34

   41 term: primary .

    $default  reduce using rule 41 (term)


State 35

   16 stmt: Debugger .

    $default  reduce using rule 16 (stmt)


State 36

   37 term: lvalue . $@1 PLUS_PLUS
   40     | lvalue . $@2 MINUS_MINUS
   42 assignexpr: lvalue . ASSIGNATION expr
   43 primary: lvalue .
   53 member: lvalue . DOT IDENTIFIER
   54       | lvalue . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   58 call: lvalue . callsuffix

    ASSIGNATION          shift, and go to state 89
    LEFT_SQUARE_BRACKET  shift, and go to state 90
    LEFT_PARENTHESIS     shift, and go to state 91
    DOT                  shift, and go to state 92
    DOUBLE_DOT           shift, and go to state 93

    PLUS_PLUS    reduce using rule 36 ($@1)
    MINUS_MINUS  reduce using rule 39 ($@2)
    $default     reduce using rule 43 (primary)

    $@1         go to state 94
    $@2         go to state 95
    callsuffix  go to state 96
    normcall    go to state 97
    methodcall  go to state 98


State 37

   52 lvalue: member .

    $default  reduce using rule 52 (lvalue)


State 38

   44 primary: call .
   55 member: call . DOT IDENTIFIER
   56       | call . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   57 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_SQUARE_BRACKET  shift, and go to state 99
    LEFT_PARENTHESIS     shift, and go to state 100
    DOT                  shift, and go to state 101

    $default  reduce using rule 44 (primary)


State 39

   45 primary: objectdef .

    $default  reduce using rule 45 (primary)


State 40

   13 stmt: block .

    $default  reduce using rule 13 (stmt)


State 41

   14 stmt: funcdef .

    $default  reduce using rule 14 (stmt)


State 42

   47 primary: const .

    $default  reduce using rule 47 (primary)


State 43

    6 stmt: ifstmt .

    $default  reduce using rule 6 (stmt)


State 44

    7 stmt: whilestmt .

    $default  reduce using rule 7 (stmt)


State 45

    8 stmt: dostmt .

    $default  reduce using rule 8 (stmt)


State 46

    9 stmt: forstmt .

    $default  reduce using rule 9 (stmt)


State 47

   10 stmt: returnstmt .

    $default  reduce using rule 10 (stmt)


State 48

   96 dostmt: DO LEFT_BRACKET . stmt RIGHT_BRACKET WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    DO                   shift, and go to state 8
    IF                   shift, and go to state 9
    WHILE                shift, and go to state 10
    FOR                  shift, and go to state 11
    FUNCTION             shift, and go to state 12
    RETURN               shift, and go to state 13
    BREAK                shift, and go to state 14
    CONTINUE             shift, and go to state 15
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_BRACKET         shift, and go to state 24
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    SEMICOLON            shift, and go to state 27
    DOUBLE_COLON         shift, and go to state 28
    DEBUG                shift, and go to state 29

    stmt        go to state 102
    expr        go to state 31
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    Debugger    go to state 35
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    block       go to state 40
    funcdef     go to state 41
    const       go to state 42
    ifstmt      go to state 43
    whilestmt   go to state 44
    dostmt      go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 49

   92 ifstmt: IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt
   93       | IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt ELSE stmt

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 103
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 50

   95 whilestmt: WHILE LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS $@10 stmt

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 104
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 51

   98 forstmt: FOR LEFT_PARENTHESIS . elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS $@11 stmt

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    $default  reduce using rule 66 (elist)

    expr        go to state 68
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    elist       go to state 105
    objectdef   go to state 39
    const       go to state 42


State 52

   82 funcdef: FUNCTION IDENTIFIER . $@7 LEFT_PARENTHESIS $@8 idlist RIGHT_PARENTHESIS $@9 block

    $default  reduce using rule 79 ($@7)

    $@7  go to state 106


State 53

   78 funcdef: FUNCTION LEFT_PARENTHESIS . $@5 idlist RIGHT_PARENTHESIS $@6 block

    $default  reduce using rule 76 ($@5)

    $@5  go to state 107


State 54

   99 returnstmt: RETURN SEMICOLON . M

    $default  reduce using rule 4 (M)

    M  go to state 108


State 55

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr
  100 returnstmt: RETURN expr . SEMICOLON

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    EQUAL          shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODERATE       shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_THAN      shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    SEMICOLON      shift, and go to state 109


State 56

   11 stmt: BREAK SEMICOLON .

    $default  reduce using rule 11 (stmt)


State 57

   12 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 58

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr
   34 term: NOT expr .

    $default  reduce using rule 34 (term)


State 59

   50 lvalue: LOCAL IDENTIFIER .

    $default  reduce using rule 50 (lvalue)


State 60

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr
   33 term: MINUS expr .

    $default  reduce using rule 33 (term)


State 61

   59 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 12

    funcdef  go to state 110


State 62

   35 term: PLUS_PLUS lvalue .
   53 member: lvalue . DOT IDENTIFIER
   54       | lvalue . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   58 call: lvalue . callsuffix

    LEFT_SQUARE_BRACKET  shift, and go to state 90
    LEFT_PARENTHESIS     shift, and go to state 91
    DOT                  shift, and go to state 92
    DOUBLE_DOT           shift, and go to state 93

    $default  reduce using rule 35 (term)

    callsuffix  go to state 96
    normcall    go to state 97
    methodcall  go to state 98


State 63

   55 member: call . DOT IDENTIFIER
   56       | call . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   57 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_SQUARE_BRACKET  shift, and go to state 99
    LEFT_PARENTHESIS     shift, and go to state 100
    DOT                  shift, and go to state 101


State 64

   38 term: MINUS_MINUS lvalue .
   53 member: lvalue . DOT IDENTIFIER
   54       | lvalue . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   58 call: lvalue . callsuffix

    LEFT_SQUARE_BRACKET  shift, and go to state 90
    LEFT_PARENTHESIS     shift, and go to state 91
    DOT                  shift, and go to state 92
    DOUBLE_DOT           shift, and go to state 93

    $default  reduce using rule 38 (term)

    callsuffix  go to state 96
    normcall    go to state 97
    methodcall  go to state 98


State 65

   73 block: LEFT_BRACKET $@3 . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 111


State 66

   75 block: LEFT_BRACKET $@4 . stmt stmts RIGHT_BRACKET

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    DO                   shift, and go to state 8
    IF                   shift, and go to state 9
    WHILE                shift, and go to state 10
    FOR                  shift, and go to state 11
    FUNCTION             shift, and go to state 12
    RETURN               shift, and go to state 13
    BREAK                shift, and go to state 14
    CONTINUE             shift, and go to state 15
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_BRACKET         shift, and go to state 24
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    SEMICOLON            shift, and go to state 27
    DOUBLE_COLON         shift, and go to state 28
    DEBUG                shift, and go to state 29

    stmt        go to state 112
    expr        go to state 31
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    Debugger    go to state 35
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    block       go to state 40
    funcdef     go to state 41
    const       go to state 42
    ifstmt      go to state 43
    whilestmt   go to state 44
    dostmt      go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 67

   71 indexedelem: LEFT_BRACKET . expr COLON expr RIGHT_BRACKET

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 113
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 68

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr
   64 elist: expr .

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    EQUAL          shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODERATE       shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_THAN      shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87

    $default  reduce using rule 64 (elist)


State 69

   65 elist: elist . COMMA expr
   67 objectdef: LEFT_SQUARE_BRACKET elist . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 114
    COMMA                 shift, and go to state 115


State 70

   68 objectdef: LEFT_SQUARE_BRACKET indexed . RIGHT_SQUARE_BRACKET
   70 indexed: indexed . COMMA indexedelem

    RIGHT_SQUARE_BRACKET  shift, and go to state 116
    COMMA                 shift, and go to state 117


State 71

   69 indexed: indexedelem .

    $default  reduce using rule 69 (indexed)


State 72

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr
   32 term: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 75
    OR                 shift, and go to state 76
    EQUAL              shift, and go to state 77
    PLUS               shift, and go to state 78
    MINUS              shift, and go to state 79
    MULTIPLY           shift, and go to state 80
    DIVIDE             shift, and go to state 81
    MODERATE           shift, and go to state 82
    NOT_EQUAL          shift, and go to state 83
    GREATER_THAN       shift, and go to state 84
    LESS_THAN          shift, and go to state 85
    GREATER_EQUAL      shift, and go to state 86
    LESS_EQUAL         shift, and go to state 87
    RIGHT_PARENTHESIS  shift, and go to state 118


State 73

   46 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   59 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 119


State 74

   51 lvalue: DOUBLE_COLON IDENTIFIER .

    $default  reduce using rule 51 (lvalue)


State 75

   29 expr: expr AND . M expr

    $default  reduce using rule 4 (M)

    M  go to state 120


State 76

   30 expr: expr OR . M expr

    $default  reduce using rule 4 (M)

    M  go to state 121


State 77

   27 expr: expr EQUAL . expr

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 122
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 78

   18 expr: expr PLUS . expr

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 123
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 79

   19 expr: expr MINUS . expr

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 124
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 80

   20 expr: expr MULTIPLY . expr

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 125
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 81

   21 expr: expr DIVIDE . expr

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 126
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 82

   22 expr: expr MODERATE . expr

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 127
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 83

   28 expr: expr NOT_EQUAL . expr

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 128
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 84

   23 expr: expr GREATER_THAN . expr

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 129
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 85

   25 expr: expr LESS_THAN . expr

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 130
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 86

   24 expr: expr GREATER_EQUAL . expr

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 131
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 87

   26 expr: expr LESS_EQUAL . expr

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 132
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 88

    5 stmt: expr SEMICOLON .

    $default  reduce using rule 5 (stmt)


State 89

   42 assignexpr: lvalue ASSIGNATION . expr

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 133
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 90

   54 member: lvalue LEFT_SQUARE_BRACKET . expr RIGHT_SQUARE_BRACKET

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 134
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 91

   62 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    $default  reduce using rule 66 (elist)

    expr        go to state 68
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    elist       go to state 135
    objectdef   go to state 39
    const       go to state 42


State 92

   53 member: lvalue DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 136


State 93

   63 methodcall: DOUBLE_DOT . IDENTIFIER LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    IDENTIFIER  shift, and go to state 137


State 94

   37 term: lvalue $@1 . PLUS_PLUS

    PLUS_PLUS  shift, and go to state 138


State 95

   40 term: lvalue $@2 . MINUS_MINUS

    MINUS_MINUS  shift, and go to state 139


State 96

   58 call: lvalue callsuffix .

    $default  reduce using rule 58 (call)


State 97

   60 callsuffix: normcall .

    $default  reduce using rule 60 (callsuffix)


State 98

   61 callsuffix: methodcall .

    $default  reduce using rule 61 (callsuffix)


State 99

   56 member: call LEFT_SQUARE_BRACKET . expr RIGHT_SQUARE_BRACKET

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 140
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 100

   57 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    $default  reduce using rule 66 (elist)

    expr        go to state 68
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    elist       go to state 141
    objectdef   go to state 39
    const       go to state 42


State 101

   55 member: call DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 142


State 102

   96 dostmt: DO LEFT_BRACKET stmt . RIGHT_BRACKET WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

    RIGHT_BRACKET  shift, and go to state 143


State 103

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr
   92 ifstmt: IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt
   93       | IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt ELSE stmt

    AND                shift, and go to state 75
    OR                 shift, and go to state 76
    EQUAL              shift, and go to state 77
    PLUS               shift, and go to state 78
    MINUS              shift, and go to state 79
    MULTIPLY           shift, and go to state 80
    DIVIDE             shift, and go to state 81
    MODERATE           shift, and go to state 82
    NOT_EQUAL          shift, and go to state 83
    GREATER_THAN       shift, and go to state 84
    LESS_THAN          shift, and go to state 85
    GREATER_EQUAL      shift, and go to state 86
    LESS_EQUAL         shift, and go to state 87
    RIGHT_PARENTHESIS  shift, and go to state 144


State 104

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr
   95 whilestmt: WHILE LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS $@10 stmt

    AND                shift, and go to state 75
    OR                 shift, and go to state 76
    EQUAL              shift, and go to state 77
    PLUS               shift, and go to state 78
    MINUS              shift, and go to state 79
    MULTIPLY           shift, and go to state 80
    DIVIDE             shift, and go to state 81
    MODERATE           shift, and go to state 82
    NOT_EQUAL          shift, and go to state 83
    GREATER_THAN       shift, and go to state 84
    LESS_THAN          shift, and go to state 85
    GREATER_EQUAL      shift, and go to state 86
    LESS_EQUAL         shift, and go to state 87
    RIGHT_PARENTHESIS  shift, and go to state 145


State 105

   65 elist: elist . COMMA expr
   98 forstmt: FOR LEFT_PARENTHESIS elist . SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS $@11 stmt

    SEMICOLON  shift, and go to state 146
    COMMA      shift, and go to state 115


State 106

   82 funcdef: FUNCTION IDENTIFIER $@7 . LEFT_PARENTHESIS $@8 idlist RIGHT_PARENTHESIS $@9 block

    LEFT_PARENTHESIS  shift, and go to state 147


State 107

   78 funcdef: FUNCTION LEFT_PARENTHESIS $@5 . idlist RIGHT_PARENTHESIS $@6 block

    IDENTIFIER  shift, and go to state 148

    $default  reduce using rule 91 (idlist)

    idlist  go to state 149


State 108

   99 returnstmt: RETURN SEMICOLON M .

    $default  reduce using rule 99 (returnstmt)


State 109

  100 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 100 (returnstmt)


State 110

   59 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 150


State 111

   73 block: LEFT_BRACKET $@3 RIGHT_BRACKET .

    $default  reduce using rule 73 (block)


State 112

   75 block: LEFT_BRACKET $@4 stmt . stmts RIGHT_BRACKET

    $default  reduce using rule 3 (stmts)

    stmts  go to state 151


State 113

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr
   71 indexedelem: LEFT_BRACKET expr . COLON expr RIGHT_BRACKET

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    EQUAL          shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODERATE       shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_THAN      shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    COLON          shift, and go to state 152


State 114

   67 objectdef: LEFT_SQUARE_BRACKET elist RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 67 (objectdef)


State 115

   65 elist: elist COMMA . expr

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 153
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 116

   68 objectdef: LEFT_SQUARE_BRACKET indexed RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 68 (objectdef)


State 117

   70 indexed: indexed COMMA . indexedelem

    LEFT_BRACKET  shift, and go to state 67

    indexedelem  go to state 154


State 118

   32 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 32 (term)


State 119

   46 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   59 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 155

    $default  reduce using rule 46 (primary)


State 120

   29 expr: expr AND M . expr

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 156
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 121

   30 expr: expr OR M . expr

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 157
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 122

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   27     | expr EQUAL expr .
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODERATE       shift, and go to state 82
    GREATER_THAN   shift, and go to state 84
    LESS_THAN      shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 123

   18 expr: expr . PLUS expr
   18     | expr PLUS expr .
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr

    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODERATE  shift, and go to state 82

    $default  reduce using rule 18 (expr)


State 124

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   19     | expr MINUS expr .
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr

    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODERATE  shift, and go to state 82

    $default  reduce using rule 19 (expr)


State 125

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   20     | expr MULTIPLY expr .
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr

    $default  reduce using rule 20 (expr)


State 126

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   21     | expr DIVIDE expr .
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr

    $default  reduce using rule 21 (expr)


State 127

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   22     | expr MODERATE expr .
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr

    $default  reduce using rule 22 (expr)


State 128

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   28     | expr NOT_EQUAL expr .
   29     | expr . AND M expr
   30     | expr . OR M expr

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODERATE       shift, and go to state 82
    GREATER_THAN   shift, and go to state 84
    LESS_THAN      shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 28 (expr)


State 129

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   23     | expr GREATER_THAN expr .
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr

    PLUS      shift, and go to state 78
    MINUS     shift, and go to state 79
    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODERATE  shift, and go to state 82

    GREATER_THAN   error (nonassociative)
    LESS_THAN      error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 23 (expr)


State 130

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   25     | expr LESS_THAN expr .
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr

    PLUS      shift, and go to state 78
    MINUS     shift, and go to state 79
    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODERATE  shift, and go to state 82

    GREATER_THAN   error (nonassociative)
    LESS_THAN      error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 25 (expr)


State 131

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   24     | expr GREATER_EQUAL expr .
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr

    PLUS      shift, and go to state 78
    MINUS     shift, and go to state 79
    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODERATE  shift, and go to state 82

    GREATER_THAN   error (nonassociative)
    LESS_THAN      error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 24 (expr)


State 132

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   26     | expr LESS_EQUAL expr .
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr

    PLUS      shift, and go to state 78
    MINUS     shift, and go to state 79
    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODERATE  shift, and go to state 82

    GREATER_THAN   error (nonassociative)
    LESS_THAN      error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 26 (expr)


State 133

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr
   42 assignexpr: lvalue ASSIGNATION expr .

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    EQUAL          shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODERATE       shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_THAN      shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87

    $default  reduce using rule 42 (assignexpr)


State 134

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr
   54 member: lvalue LEFT_SQUARE_BRACKET expr . RIGHT_SQUARE_BRACKET

    AND                   shift, and go to state 75
    OR                    shift, and go to state 76
    EQUAL                 shift, and go to state 77
    PLUS                  shift, and go to state 78
    MINUS                 shift, and go to state 79
    MULTIPLY              shift, and go to state 80
    DIVIDE                shift, and go to state 81
    MODERATE              shift, and go to state 82
    NOT_EQUAL             shift, and go to state 83
    GREATER_THAN          shift, and go to state 84
    LESS_THAN             shift, and go to state 85
    GREATER_EQUAL         shift, and go to state 86
    LESS_EQUAL            shift, and go to state 87
    RIGHT_SQUARE_BRACKET  shift, and go to state 158


State 135

   62 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS
   65 elist: elist . COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 159
    COMMA              shift, and go to state 115


State 136

   53 member: lvalue DOT IDENTIFIER .

    $default  reduce using rule 53 (member)


State 137

   63 methodcall: DOUBLE_DOT IDENTIFIER . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 160


State 138

   37 term: lvalue $@1 PLUS_PLUS .

    $default  reduce using rule 37 (term)


State 139

   40 term: lvalue $@2 MINUS_MINUS .

    $default  reduce using rule 40 (term)


State 140

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr
   56 member: call LEFT_SQUARE_BRACKET expr . RIGHT_SQUARE_BRACKET

    AND                   shift, and go to state 75
    OR                    shift, and go to state 76
    EQUAL                 shift, and go to state 77
    PLUS                  shift, and go to state 78
    MINUS                 shift, and go to state 79
    MULTIPLY              shift, and go to state 80
    DIVIDE                shift, and go to state 81
    MODERATE              shift, and go to state 82
    NOT_EQUAL             shift, and go to state 83
    GREATER_THAN          shift, and go to state 84
    LESS_THAN             shift, and go to state 85
    GREATER_EQUAL         shift, and go to state 86
    LESS_EQUAL            shift, and go to state 87
    RIGHT_SQUARE_BRACKET  shift, and go to state 161


State 141

   57 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS
   65 elist: elist . COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 162
    COMMA              shift, and go to state 115


State 142

   55 member: call DOT IDENTIFIER .

    $default  reduce using rule 55 (member)


State 143

   96 dostmt: DO LEFT_BRACKET stmt RIGHT_BRACKET . WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

    WHILE  shift, and go to state 163


State 144

   92 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt
   93       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt ELSE stmt

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    DO                   shift, and go to state 8
    IF                   shift, and go to state 9
    WHILE                shift, and go to state 10
    FOR                  shift, and go to state 11
    FUNCTION             shift, and go to state 12
    RETURN               shift, and go to state 13
    BREAK                shift, and go to state 14
    CONTINUE             shift, and go to state 15
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_BRACKET         shift, and go to state 24
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    SEMICOLON            shift, and go to state 27
    DOUBLE_COLON         shift, and go to state 28
    DEBUG                shift, and go to state 29

    stmt        go to state 164
    expr        go to state 31
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    Debugger    go to state 35
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    block       go to state 40
    funcdef     go to state 41
    const       go to state 42
    ifstmt      go to state 43
    whilestmt   go to state 44
    dostmt      go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 145

   95 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . $@10 stmt

    $default  reduce using rule 94 ($@10)

    $@10  go to state 165


State 146

   98 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON . expr SEMICOLON elist RIGHT_PARENTHESIS $@11 stmt

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 166
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 147

   82 funcdef: FUNCTION IDENTIFIER $@7 LEFT_PARENTHESIS . $@8 idlist RIGHT_PARENTHESIS $@9 block

    $default  reduce using rule 80 ($@8)

    $@8  go to state 167


State 148

   89 idlist: IDENTIFIER .

    $default  reduce using rule 89 (idlist)


State 149

   78 funcdef: FUNCTION LEFT_PARENTHESIS $@5 idlist . RIGHT_PARENTHESIS $@6 block
   90 idlist: idlist . COMMA IDENTIFIER

    RIGHT_PARENTHESIS  shift, and go to state 168
    COMMA              shift, and go to state 169


State 150

   59 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 155


State 151

    2 stmts: stmts . stmt
   75 block: LEFT_BRACKET $@4 stmt stmts . RIGHT_BRACKET

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    DO                   shift, and go to state 8
    IF                   shift, and go to state 9
    WHILE                shift, and go to state 10
    FOR                  shift, and go to state 11
    FUNCTION             shift, and go to state 12
    RETURN               shift, and go to state 13
    BREAK                shift, and go to state 14
    CONTINUE             shift, and go to state 15
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_BRACKET         shift, and go to state 24
    RIGHT_BRACKET        shift, and go to state 170
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    SEMICOLON            shift, and go to state 27
    DOUBLE_COLON         shift, and go to state 28
    DEBUG                shift, and go to state 29

    stmt        go to state 30
    expr        go to state 31
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    Debugger    go to state 35
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    block       go to state 40
    funcdef     go to state 41
    const       go to state 42
    ifstmt      go to state 43
    whilestmt   go to state 44
    dostmt      go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 152

   71 indexedelem: LEFT_BRACKET expr COLON . expr RIGHT_BRACKET

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 171
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 153

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr
   65 elist: elist COMMA expr .

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    EQUAL          shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODERATE       shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_THAN      shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87

    $default  reduce using rule 65 (elist)


State 154

   70 indexed: indexed COMMA indexedelem .

    $default  reduce using rule 70 (indexed)


State 155

   59 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    $default  reduce using rule 66 (elist)

    expr        go to state 68
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    elist       go to state 172
    objectdef   go to state 39
    const       go to state 42


State 156

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   29     | expr AND M expr .
   30     | expr . OR M expr

    EQUAL          shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODERATE       shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_THAN      shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87

    $default  reduce using rule 29 (expr)


State 157

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr
   30     | expr OR M expr .

    AND            shift, and go to state 75
    EQUAL          shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODERATE       shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_THAN      shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87

    $default  reduce using rule 30 (expr)


State 158

   54 member: lvalue LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 54 (member)


State 159

   62 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 62 (normcall)


State 160

   63 methodcall: DOUBLE_DOT IDENTIFIER LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    $default  reduce using rule 66 (elist)

    expr        go to state 68
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    elist       go to state 173
    objectdef   go to state 39
    const       go to state 42


State 161

   56 member: call LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 56 (member)


State 162

   57 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 57 (call)


State 163

   96 dostmt: DO LEFT_BRACKET stmt RIGHT_BRACKET WHILE . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 174


State 164

   92 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt .
   93       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt . ELSE stmt

    ELSE  shift, and go to state 175

    $default  reduce using rule 92 (ifstmt)


State 165

   95 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS $@10 . stmt

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    DO                   shift, and go to state 8
    IF                   shift, and go to state 9
    WHILE                shift, and go to state 10
    FOR                  shift, and go to state 11
    FUNCTION             shift, and go to state 12
    RETURN               shift, and go to state 13
    BREAK                shift, and go to state 14
    CONTINUE             shift, and go to state 15
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_BRACKET         shift, and go to state 24
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    SEMICOLON            shift, and go to state 27
    DOUBLE_COLON         shift, and go to state 28
    DEBUG                shift, and go to state 29

    stmt        go to state 176
    expr        go to state 31
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    Debugger    go to state 35
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    block       go to state 40
    funcdef     go to state 41
    const       go to state 42
    ifstmt      go to state 43
    whilestmt   go to state 44
    dostmt      go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 166

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr
   98 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr . SEMICOLON elist RIGHT_PARENTHESIS $@11 stmt

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    EQUAL          shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODERATE       shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_THAN      shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    SEMICOLON      shift, and go to state 177


State 167

   82 funcdef: FUNCTION IDENTIFIER $@7 LEFT_PARENTHESIS $@8 . idlist RIGHT_PARENTHESIS $@9 block

    IDENTIFIER  shift, and go to state 148

    $default  reduce using rule 91 (idlist)

    idlist  go to state 178


State 168

   78 funcdef: FUNCTION LEFT_PARENTHESIS $@5 idlist RIGHT_PARENTHESIS . $@6 block

    $default  reduce using rule 77 ($@6)

    $@6  go to state 179


State 169

   90 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 180


State 170

   75 block: LEFT_BRACKET $@4 stmt stmts RIGHT_BRACKET .

    $default  reduce using rule 75 (block)


State 171

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr
   71 indexedelem: LEFT_BRACKET expr COLON expr . RIGHT_BRACKET

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    EQUAL          shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODERATE       shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_THAN      shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    RIGHT_BRACKET  shift, and go to state 181


State 172

   59 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS
   65 elist: elist . COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 182
    COMMA              shift, and go to state 115


State 173

   63 methodcall: DOUBLE_DOT IDENTIFIER LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS
   65 elist: elist . COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 183
    COMMA              shift, and go to state 115


State 174

   96 dostmt: DO LEFT_BRACKET stmt RIGHT_BRACKET WHILE LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    expr        go to state 184
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    const       go to state 42


State 175

   93 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE . stmt

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    DO                   shift, and go to state 8
    IF                   shift, and go to state 9
    WHILE                shift, and go to state 10
    FOR                  shift, and go to state 11
    FUNCTION             shift, and go to state 12
    RETURN               shift, and go to state 13
    BREAK                shift, and go to state 14
    CONTINUE             shift, and go to state 15
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_BRACKET         shift, and go to state 24
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    SEMICOLON            shift, and go to state 27
    DOUBLE_COLON         shift, and go to state 28
    DEBUG                shift, and go to state 29

    stmt        go to state 185
    expr        go to state 31
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    Debugger    go to state 35
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    block       go to state 40
    funcdef     go to state 41
    const       go to state 42
    ifstmt      go to state 43
    whilestmt   go to state 44
    dostmt      go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 176

   95 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS $@10 stmt .

    $default  reduce using rule 95 (whilestmt)


State 177

   98 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON . elist RIGHT_PARENTHESIS $@11 stmt

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    DOUBLE_COLON         shift, and go to state 28

    $default  reduce using rule 66 (elist)

    expr        go to state 68
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    elist       go to state 186
    objectdef   go to state 39
    const       go to state 42


State 178

   82 funcdef: FUNCTION IDENTIFIER $@7 LEFT_PARENTHESIS $@8 idlist . RIGHT_PARENTHESIS $@9 block
   90 idlist: idlist . COMMA IDENTIFIER

    RIGHT_PARENTHESIS  shift, and go to state 187
    COMMA              shift, and go to state 169


State 179

   78 funcdef: FUNCTION LEFT_PARENTHESIS $@5 idlist RIGHT_PARENTHESIS $@6 . block

    LEFT_BRACKET  shift, and go to state 24

    block  go to state 188


State 180

   90 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 90 (idlist)


State 181

   71 indexedelem: LEFT_BRACKET expr COLON expr RIGHT_BRACKET .

    $default  reduce using rule 71 (indexedelem)


State 182

   59 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 59 (call)


State 183

   63 methodcall: DOUBLE_DOT IDENTIFIER LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 63 (methodcall)


State 184

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODERATE expr
   23     | expr . GREATER_THAN expr
   24     | expr . GREATER_EQUAL expr
   25     | expr . LESS_THAN expr
   26     | expr . LESS_EQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOT_EQUAL expr
   29     | expr . AND M expr
   30     | expr . OR M expr
   96 dostmt: DO LEFT_BRACKET stmt RIGHT_BRACKET WHILE LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 75
    OR                 shift, and go to state 76
    EQUAL              shift, and go to state 77
    PLUS               shift, and go to state 78
    MINUS              shift, and go to state 79
    MULTIPLY           shift, and go to state 80
    DIVIDE             shift, and go to state 81
    MODERATE           shift, and go to state 82
    NOT_EQUAL          shift, and go to state 83
    GREATER_THAN       shift, and go to state 84
    LESS_THAN          shift, and go to state 85
    GREATER_EQUAL      shift, and go to state 86
    LESS_EQUAL         shift, and go to state 87
    RIGHT_PARENTHESIS  shift, and go to state 189


State 185

   93 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt .

    $default  reduce using rule 93 (ifstmt)


State 186

   65 elist: elist . COMMA expr
   98 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist . RIGHT_PARENTHESIS $@11 stmt

    RIGHT_PARENTHESIS  shift, and go to state 190
    COMMA              shift, and go to state 115


State 187

   82 funcdef: FUNCTION IDENTIFIER $@7 LEFT_PARENTHESIS $@8 idlist RIGHT_PARENTHESIS . $@9 block

    $default  reduce using rule 81 ($@9)

    $@9  go to state 191


State 188

   78 funcdef: FUNCTION LEFT_PARENTHESIS $@5 idlist RIGHT_PARENTHESIS $@6 block .

    $default  reduce using rule 78 (funcdef)


State 189

   96 dostmt: DO LEFT_BRACKET stmt RIGHT_BRACKET WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 96 (dostmt)


State 190

   98 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS . $@11 stmt

    $default  reduce using rule 97 ($@11)

    $@11  go to state 192


State 191

   82 funcdef: FUNCTION IDENTIFIER $@7 LEFT_PARENTHESIS $@8 idlist RIGHT_PARENTHESIS $@9 . block

    LEFT_BRACKET  shift, and go to state 24

    block  go to state 193


State 192

   98 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS $@11 . stmt

    IDENTIFIER           shift, and go to state 4
    CONST_INT            shift, and go to state 5
    CONST_FLOAT          shift, and go to state 6
    STRING               shift, and go to state 7
    DO                   shift, and go to state 8
    IF                   shift, and go to state 9
    WHILE                shift, and go to state 10
    FOR                  shift, and go to state 11
    FUNCTION             shift, and go to state 12
    RETURN               shift, and go to state 13
    BREAK                shift, and go to state 14
    CONTINUE             shift, and go to state 15
    NOT                  shift, and go to state 16
    LOCAL                shift, and go to state 17
    TRUE                 shift, and go to state 18
    FALSE                shift, and go to state 19
    NIL                  shift, and go to state 20
    MINUS                shift, and go to state 21
    PLUS_PLUS            shift, and go to state 22
    MINUS_MINUS          shift, and go to state 23
    LEFT_BRACKET         shift, and go to state 24
    LEFT_SQUARE_BRACKET  shift, and go to state 25
    LEFT_PARENTHESIS     shift, and go to state 26
    SEMICOLON            shift, and go to state 27
    DOUBLE_COLON         shift, and go to state 28
    DEBUG                shift, and go to state 29

    stmt        go to state 194
    expr        go to state 31
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    Debugger    go to state 35
    lvalue      go to state 36
    member      go to state 37
    call        go to state 38
    objectdef   go to state 39
    block       go to state 40
    funcdef     go to state 41
    const       go to state 42
    ifstmt      go to state 43
    whilestmt   go to state 44
    dostmt      go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 193

   82 funcdef: FUNCTION IDENTIFIER $@7 LEFT_PARENTHESIS $@8 idlist RIGHT_PARENTHESIS $@9 block .

    $default  reduce using rule 82 (funcdef)


State 194

   98 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS $@11 stmt .

    $default  reduce using rule 98 (forstmt)
